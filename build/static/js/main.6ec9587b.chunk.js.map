{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGripItem.js","components/GifGrip.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","imputValue","setImputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","propsTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGripItem","className","Card","style","width","Img","variant","src","Body","Title","Text","GifGrip","loading","state","setState","useEffect","then","imgs","useFetchGifs","Spinner","animation","GifExpertApp","categories","Button","margin-left","href","ReactDOM","render","document","getElementById"],"mappings":"8NAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACE,sBAAMC,SATa,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAKlB,SAEA,uBAECO,KAAK,OACLC,MAAOT,EACPU,SAnBuB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAmBtBG,YAAa,qBASlBf,EAAYgB,WAAW,CAGrBf,cAAegB,IAAUC,KAAKC,Y,oCCtCnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAabM,GAba,4CAAH,sD,QCEPO,EAAc,SAAC,GAAoB,IAAnBH,EAAkB,EAAlBA,MAASV,GAAS,EAAZS,GAAY,EAATT,KAGlC,OAEI,qBAAKc,UAAU,2DAAf,SACA,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACA,cAACF,EAAA,EAAKG,IAAN,CAAUC,QAAQ,MAAMC,IAAKpB,IAC7B,eAACe,EAAA,EAAKM,KAAN,WACE,cAACN,EAAA,EAAKO,MAAN,UAAaZ,IACb,cAACK,EAAA,EAAKQ,KAAN,6C,QCLGC,EAAU,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,ECJb,SAACA,GAAc,IAAD,EACdnB,mBAAS,CACjC0B,KAAM,GACNoB,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WACR/B,EAAQC,GAAU+B,MAAK,SAAAC,GAEnBH,EAAS,CACPtB,KAAMyB,EACNL,SAAS,SAId,CAAC3B,IAGG4B,EDZkBK,CAAajC,GAA7BO,EAF8B,EAE9BA,KAAKoB,EAFyB,EAEzBA,QAKd,OACE,qCACE,6BAAK3B,IACJ2B,EAAU,cAACO,EAAA,EAAD,CAASC,UAAU,WAAc,KAC5C,qBAAKnB,UAAU,YAAf,SACGT,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEsBjByB,EArCM,WAAK,MAGcvD,mBAAS,IAHvB,mBAGfwD,EAHe,KAGHzD,EAHG,KAatB,OACI,qCACA,yCACA,cAAC0D,EAAA,EAAD,CAAQC,cAAY,OAAOlB,QAAQ,OAAOpB,GAAC,EAACuC,KAAK,8CAAjD,wBACA,cAAC,EAAD,CAAa5D,cAAeA,IAC5B,uBACA,6BACCyD,EAAW5B,KAAI,SAACT,GAEb,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCrBjCyC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.6ec9587b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [imputValue, setImputValue] = useState('');\r\n\r\n  const handleImputChange = (e) => {\r\n    setImputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e)=>{\r\n      e.preventDefault();\r\n      if(imputValue.trim().length > 2){ \r\n        setCategories(cats=>[ imputValue,...cats ]);\r\n        setImputValue('');\r\n      }\r\n\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n\r\n    <input\r\n    \r\n     type=\"text\"\r\n     value={imputValue} \r\n     onChange={handleImputChange} \r\n     placeholder= 'Search to GIF'\r\n     \r\n     />\r\n\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propsTypes={\r\n\r\n\r\n  setCategories: PropTypes.func.isRequired\r\n\r\n\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=47jjKBGHI2edqQInzln8IvarN1RA9ZFa`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n   return gifs;\r\n  };","import React from 'react'\r\nimport {Card} from 'react-bootstrap';\r\nexport const GifGripItem = ({title,id,url}) => {\r\n\r\n\r\n    return (\r\n       \r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">     \r\n        <Card style={{ width: '18rem' }}>\r\n        <Card.Img variant=\"top\" src={url} />\r\n        <Card.Body>\r\n          <Card.Title>{title}</Card.Title>\r\n          <Card.Text>\r\n            Powered by Eino Linna\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n      </div>\r\n      \r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"./hooks/useFetchGifs\";\r\nimport { GifGripItem } from \"./GifGripItem\";\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport const GifGrip = ({ category }) => {\r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n    \r\n\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading ? <Spinner animation=\"border\" /> : null}\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => (\r\n          <GifGripItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then(imgs => {\r\n      \r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      \r\n    });\r\n  }, [category]);\r\n\r\n\r\n  return state;\r\n};\r\n","import React,{useState} from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrip } from './components/GifGrip';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    //const categories = ['Dragon Ball','Naruto','Pokemon'];\r\n    const [categories, setCategories] = useState([]);\r\n\r\n /*    const handleAdd = ()=>{\r\n\r\n        setCategories([...categories, 'Yugi OH']);\r\n \r\n     }\r\n */\r\n  \r\n\r\n    return (\r\n        <>\r\n        <h2>APP GIF</h2>\r\n        <Button margin-left='10px' variant=\"dark\" a href=\"https://github.com/einolinna/webserver-node\">Repository</Button>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr></hr>\r\n        <ol>\r\n        {categories.map((category)=>{\r\n            \r\n            return <GifGrip key={category} category={category}/>\r\n            \r\n        \r\n        })}\r\n             </ol>\r\n         </>   \r\n        \r\n\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);"],"sourceRoot":""}